name: 'Terraform'

on:
  push:
    # branches: [ "main" ]
    branches: [ ]
  pull_request:
    # branches: [ "main" ]
    branches: [ ]

env:
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

jobs:
  terraform:
    name: 'terraform apply'
    runs-on: ubuntu-latest
    environment: production

    defaults:
      run:
        shell: bash
        working-directory: terraform

    # https://docs.github.com/en/actions/using-workflows/workflow-syntax-for-github-actions#permissions
    permissions:
      contents: read
      pull-requests: write

    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Setup Terraform v1.6.0
      uses: hashicorp/setup-terraform@v2
      with:
        terraform_version: 1.6.0
        # For terraform cloud only
        # cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}

    - name: terraform fmt
      id: fmt
      run: terraform fmt
      continue-on-error: false

    - name: terraform init
      id: init
      run: terraform init
      continue-on-error: false

    - name: terraform validate
      id: validate
      run: terraform validate -no-color
      continue-on-error: false

    - name: terraform plan
      id: plan
      if: github.event_name == 'pull_request'
      run: terraform plan -input=false
      continue-on-error: false

    # - name: Exit if terraform fmt, init, validate or plan failed
    #   if: steps.fmt.outcome == 'failure' || steps.init.outcome == 'failure' || steps.validate.outcome == 'failure' || steps.plan.outcome == 'failure'
    #   run: exit 1

    - name: terraform apply
      id: apply
      if: github.ref == 'refs/heads/main' && github.event_name == 'push'
      run: terraform apply -auto-approve -input=false

